server:
  port: 8080

spring:
  application:
    name: inventory
---
spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: inventory
          destination: hiorder
          contentType: application/json
        event-out:
          destination: hiorder
          contentType: application/json

  # Menu 서비스 URL을 Gateway 경유로 설정
api:
  url:
    menu: http://localhost:8088/menus  # 게이트웨이를 통해 Menu 서비스에 접근

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8085
---
spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: inventory
          destination: hiorder
          contentType: application/json
        event-out:
          destination: hiorder
          contentType: application/json

  # Docker 환경의 Menu 서비스 URL도 Gateway 경유로 설정
api:
  url:
    menu: http://gateway:8080/menus  # Docker 환경에서 게이트웨이를 통한 Menu 서비스 접근

---
spring:
  profiles: kubernetes
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka-headless.default.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: inventory
          destination: hiorder
          contentType: application/json
        event-out:
          destination: hiorder
          contentType: application/json

api:
  url:
    menu: http://gateway/menus  # Kubernetes 서비스 이름 사용